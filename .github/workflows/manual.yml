# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deployproject:
    strategy:
      matrix:
        repo_name:
        # define the list of repos here
#         - a11yhelp
#         - about
#         - adobeair
#         - ajax
#         - autocomplete
#         - autoembed
#         - autogrow
#         - autolink
#         - balloonpanel
#         - balloontoolbar
        - basicstyles
#         - bbcode
#         - bidi
#         - blockquote
#         - button
#         - clipboard
#         - cloudservices
#         - codesnippet
#         - codesnippetgeshi
#         - colorbutton
#         - colordialog
#         - contextmenu
#         - copyformatting
#         - devtools
#         - dialog
#         - dialogadvtab
#         - dialogui
#         - div
#         - divarea
#         - docprops
#         - easyimage
#         - elementspath
#         - embed
#         - embedbase
#         - embedsemantic
#         - emoji
#         - enterkey
#         - entities
#         - fakeobjects
#         - filebrowser
#         - filetools
#         - find
#         - flash
#         - floatingspace
#         - floatpanel
#         - font
#         - format
#         - forms
#         - horizontalrule
#         - htmlwriter
#         - iframe
#         - iframedialog
#         - image
#         - image2
#         - imagebase
#         - indent
#         - indentblock
#         - indentlist
#         - justify
#         - language
#         - lineutils
#         - link
#         - list
#         - listblock
#         - liststyle
#         - magicline
#         - mathjax
#         - maximize
#         - mentions
#         - menu
#         - menubutton
#         - newpage
#         - notification
#         - notificationaggregator
#         - pagebreak
#         - panel
#         - panelbutton
#         - pastefromgdocs
#         - pastefromlibreoffice
#         - pastefromword
#         - pastetext
#         - pastetools
#         - placeholder
#         - popup
#         - preview
#         - print
#         - removeformat
#         - resize
#         - richcombo
#         - save
#         - selectall
#         - sharedspace
#         - showblocks
#         - showborders
#         - smiley
#         - sourcearea
#         - sourcedialog
#         - specialchar
#         - stylescombo
#         - stylesheetparser
#         - tab
#         - table
#         - tableresize
#         - tableselection
#         - tabletools
#         - templates
#         - textmatch
#         - textwatcher
#         - toolbar
#         - uicolor
#         - undo
#         - uploadfile
#         - uploadimage
#         - uploadwidget
#         - widget
#         - widgetselection
#         - wysiwygarea
#         - xml
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out ckeditor/ckeditor4
      - name: Checkout ckeditor4
        uses: actions/checkout@v2
        with:
          repository: ckeditor/ckeditor4
          path: ckeditor4
          fetch-depth: 0
      # Checks out newren/git-filter-repo
      - name: Checkout git-filter-repo
        uses: actions/checkout@v2
        with:
          repository: newren/git-filter-repo
          path: git-filter-repo
      # Checks out this repo
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: runner
      # Runs a single command using the runners shell
      - name: Prepare git-filter-repo
        run: |
          sudo cp -av git-filter-repo/git-filter-repo $(git --exec-path)
          echo "### Placing $(git --exec-path)/git-filter-repo into $(python -c "import site; print(site.getsitepackages()[-1])")/git_filter_repo.py"
          sudo mkdir -p $(python -c "import site; print(site.getsitepackages()[-1])")
          sudo ln -sv $(git --exec-path)/git-filter-repo $(python -c "import site; print(site.getsitepackages()[-1])")/git_filter_repo.py
        shell: bash
      # Generate repository
      - name: Generate repo
        env:
          GITHUB_TOKEN: ${{ secrets.MACHINE_PAT }}
        run: |
          gh config set git_protocol ssh --host github.com
          if [ -z "$(gh repo list drupal-ckeditor-libraries-group | sed -n "/drupal-ckeditor-libraries-group\/${{ matrix.repo_name }}/ p")" ]; then
            gh repo create drupal-ckeditor-libraries-group/${{ matrix.repo_name }} --confirm --public --enable-issues=false --enable-wiki=false
            echo "CREATE_PACKAGE=create" >> $GITHUB_ENV
          fi
          echo "### Processing CKEditor project: ${{ matrix.repo_name }}"
          if [ ! -d ${{ matrix.repo_name }} ]; then
            mkdir -p ${{ matrix.repo_name }}
            pushd ${{ matrix.repo_name }} > /dev/null
            git init
            git remote add origin git@github.com:drupal-ckeditor-libraries-group/${{ matrix.repo_name }}.git
            popd > /dev/null
          fi
          pushd ${{ matrix.repo_name }} > /dev/null
          echo ""
          echo "### Filtering repo using subdirectory plugins/${{ matrix.repo_name }}"
          git filter-repo --source ../ckeditor4 --target ./ --preserve-commit-hashes --prune-empty auto --subdirectory-filter plugins/${{ matrix.repo_name }}
          git checkout major
          popd > /dev/null
        shell: bash
      # Generate JSON
      - name: Generate JSON
        env:
          GITHUB_TOKEN: ${{ secrets.OPENSSH_KEY }}
        run: |
          HOME="$PWD"
          pushd ${{ matrix.repo_name }} > /dev/null
          for file in composer.json package.json
          do
            if [ ! -f ${file} ]; then
              if [ -f "$HOME/runner/template/${file}" ]; then
              echo ""
              echo "### Processing ${file}..."
                sed -e "s/__PLUGIN__/${{ matrix.repo_name }}/g" $HOME/runner/template/${file} > ${file}
                echo ""
                echo "### Generated ${{ matrix.repo_name }}/${file} from $HOME/runner/template/${file}"
                FILENAME="${file}"
                git filter-repo --force --commit-callback "if not commit.parents: commit.file_changes.append(FileChange(b'M', b'$FILENAME', b'$(git hash-object -w $FILENAME)', b'100644'))"
                echo ""
                echo "### filter-repo added ${file} in!"
              else
                echo ""
                echo "### Sorry, ${file} template not found in $HOME/runner/template."
              fi
            fi
          done
          popd > /dev/null
        shell: bash
      # Generate JSON
      - name: Commit to Drupal CKEditor Libraries Group
        env:
          GITHUB_TOKEN: ${{ secrets.OPENSSH_KEY }}
        run: |
          pushd ${{ matrix.repo_name }} > /dev/null
          if [[ -z $GITHUB_TOKEN ]]; then
            echo "SSH key not active, skipping."
          else
            echo "### Importing SSH key to $HOME/sshkey"
            key="$HOME/sshkey"
            echo "$GITHUB_TOKEN" >> "$key"
            chmod 0600 "$key"
            echo ""
            echo "### Adding SSH key from $HOME/sshkey to bash"
            eval `ssh-agent -s`
            ssh-add "$key"
            echo ""
            git remote add origin git@github.com:drupal-ckeditor-libraries-group/${{ matrix.repo_name }}.git
            echo "### Sniffing remotes:"
            git remote -v
            echo ""
            echo "### Writing to git@github.com:drupal-ckeditor-libraries-group/${{ matrix.repo_name }}.git"
            git config branch.major.remote origin
            git push -u -f origin major --tags
            if [ ! -z "${{ env.CREATE_PACKAGE }}" ]; then
              curl -X POST 'https://packagist.org/api/create-package?username=drupal-ckeditor-libraries-group&apiToken=${{ secrets.PACKAGIST_USER_TOKEN }}' -d '{"repository":{"url":"https://github.com/drupal-ckeditor-libraries-group/${{ matrix.repo_name }}"}}'
              curl -XPOST -H'content-type:application/json' 'https://packagist.org/api/update-package?username=drupal-ckeditor-libraries-group&apiToken=${{ secrets.PACKAGIST_USER_TOKEN }}' -d'{"repository":{"url":"https://github.com/drupal-ckeditor-libraries-group/${{ matrix.repo_name }}"}}'
            fi
          fi
          popd > /dev/null
        shell: bash
